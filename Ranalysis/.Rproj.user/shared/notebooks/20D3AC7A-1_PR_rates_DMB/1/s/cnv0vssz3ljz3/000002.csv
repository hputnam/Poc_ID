"0","# Define function for fitting LoLinR regressions to be applied to all intervals for all samples"
"0","fit_reg <- function(df) {"
"0","  rankLocReg(xall = as.numeric(df$Time), yall = df$Value, "
"0","             alpha = 0.2, method = ""pc"", verbose = FALSE)"
"0","}"
"0",""
"0","# Setup for parallel processing"
"0","future::plan(multiprocess)"
"2","Strategy 'multiprocess' is deprecated in future (>= 1.20.0). Instead, explicitly specify either 'multisession' or 'multicore'. In the current R session, 'multiprocess' equals 'multisession'."
"2","[ONE-TIME WARNING] Forked processing ('multicore') is not supported when running R from RStudio because it is considered unstable. For more details, how to control forked processing or not, and how to silence this warning in future R sessions, see ?parallelly::supportsMulticore"
"0","# Map LoLinR function onto all intervals of each sample's thinned dataset"
"0","df <- df %>%"
"0","  mutate(regs = furrr::future_map(thin_data, function(.) {       # future_map executes function in parallel"
"0","    group_by(., Light_Value) %>%"
"0","    do(rankLcRg = fit_reg(.))"
"0","  }))"
"2","input/output have ties"
"2","input/output have ties"
"0","## Now 'regs' contains the fitted local regressions for each interval of each sample's thinned dataset"
"0",""
"0","# Define function to pull out and plot regression diagnostics"
"0","plot_rankLcRg <- function(fragment_ID, interval_number) {"
"0","  df %>%"
"0","    filter(fragment_ID == fragment_ID) %>%"
"0","    pluck(""regs"", 1, ""rankLcRg"", interval_number) %>%"
"0","    plot()"
"0","}"
