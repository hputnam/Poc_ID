"0","### Merge rates with sample info"
"0","pr <- left_join("
"0","  select(df.out, fragment_ID, Light_Value, micromol.L.s),"
"0","  distinct(metadata, fragment_ID, Treatment, Run, Chamber.Vol.L, Date)"
"0",")"
"2","Joining, by = ""fragment_ID"""
"0","### Correct for chamber volume and blanks"
"0","pr <- pr %>%"
"0","  mutate(micromol.s = micromol.L.s * Chamber.Vol.L)"
"0",""
"0","# Get blank values -- average for each run and light value in case multiple blanks"
"0","blanks <- pr %>%"
"0","  filter(grepl(""BLK"", fragment_ID)) %>%"
"0","  group_by(Run, Light_Value) %>%"
"0","  summarise(micromol.s.blank = mean(micromol.s))"
"2","`summarise()` has grouped output by 'Run'. You can override using the `.groups` argument."
"0","# Join blank values with rest of data and subtract values from samples for same run and light value"
"0","pr <- left_join(pr, blanks) %>%"
"0","  mutate(micromol.s.adj = micromol.s - micromol.s.blank) %>%"
"0","  # After correcting for blank values, remove blanks from data"
"0","  filter(!grepl(""BLK"", fragment_ID))"
"2","Joining, by = c(""Light_Value"", ""Run"")"
"0","# Import surface area data"
"0","sa <- read_csv(file = ""data/surface.area.calc.csv"")"
"2","[1mRows: [22m[34m168[39m [1mColumns: [22m[34m3[39m"
"2","[36mâ”€â”€[39m [1mColumn specification[22m [36mâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[39m
[1mDelimiter:[22m "",""
[31mchr[39m (2): fragment_ID, timepoint
[32mdbl[39m (1): surface.area.cm2"
"2","
[36mâ„¹[39m Use `spec()` to retrieve the full column specification for this data.
[36mâ„¹[39m Specify the column types or set `show_col_types = FALSE` to quiet this message."
"0","# Join surface area with rest of data"
"0","pr <- left_join(pr, select(sa, fragment_ID, surface.area.cm2))"
"2","Joining, by = ""fragment_ID"""
"0","# Normalize rates by surface area"
"0","pr <- pr %>%"
"0","  mutate(micromol.cm2.s = micromol.s.adj / surface.area.cm2,"
"0","         micromol.cm2.h = micromol.cm2.s * 3600)"
"0",""
"0","Photo <- pr %>%"
"0","  filter(Light_Value ==620)%>% "
"0","  separate(fragment_ID, c(""Species"",""Number"",""Temp.Cat""), sep = ""-"")"
"0",""
"0","Resp <- pr %>%"
"0","  filter(Light_Value ==0)%>% "
"0","  separate(fragment_ID, c(""Species"",""Number"",""Temp.Cat""), sep = ""-"")"
"0",""
"0","# Import morphology data"
"0","morph<- read_csv(file = ""data/morphology.csv"")"
"2","[1mRows: [22m[34m995[39m [1mColumns: [22m[34m3[39m"
"2","[36mâ”€â”€[39m [1mColumn specification[22m [36mâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[39m
[1mDelimiter:[22m "",""
[31mchr[39m (2): fragment_ID, Morphology
[32mdbl[39m (1): Number"
"2","
[36mâ„¹[39m Use `spec()` to retrieve the full column specification for this data.
[36mâ„¹[39m Specify the column types or set `show_col_types = FALSE` to quiet this message."
"0","morph$Number <- as.character(morph$Number)"
"0",""
"0","# Join morph with rest of data"
"0","Photo <- left_join(Photo, morph)"
"2","Joining, by = ""Number"""
"0","Resp <- left_join(Resp, morph)"
"2","Joining, by = ""Number"""
"0","Photo <- na.omit(Photo)"
"0","Resp <- na.omit(Resp)"
